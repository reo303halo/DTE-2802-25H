// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ProductInventory.Data;

#nullable disable

namespace ProductInventory.Migrations
{
    [DbContext(typeof(ProductDbContext))]
    partial class ProductDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "8.0.20");

            modelBuilder.Entity("ProductInventory.Models.Entities.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Description")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "Tools for you",
                            Name = "Tool"
                        },
                        new
                        {
                            Id = 2,
                            Description = "All types of Vehicles",
                            Name = "Vehicles"
                        },
                        new
                        {
                            Id = 3,
                            Description = "Daily groceries",
                            Name = "Groceries"
                        });
                });

            modelBuilder.Entity("ProductInventory.Models.Entities.Manufacturer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Address")
                        .HasColumnType("TEXT");

                    b.Property<string>("Description")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Manufacturers");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Address = "Gjelleråsen Næringspark, Morteveien 12, 1481 Hagan, NORWAY",
                            Description = "Wurth Norge er til for kundens verdiskapning",
                            Name = "Wurth"
                        },
                        new
                        {
                            Id = 2,
                            Address = "Detroit, Michigan, USA",
                            Description = "Find New Roads",
                            Name = "Chevrolet"
                        },
                        new
                        {
                            Id = 3,
                            Address = "Moelv, NORWAY",
                            Description = "Meieriprodukter",
                            Name = "Tine"
                        });
                });

            modelBuilder.Entity("ProductInventory.Models.Entities.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("CategoryId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Description")
                        .HasColumnType("TEXT");

                    b.Property<int>("ManufacturerId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(8,2)");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.HasIndex("ManufacturerId");

                    b.ToTable("Products", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CategoryId = 1,
                            ManufacturerId = 1,
                            Name = "Hammer",
                            Price = 121.50m
                        },
                        new
                        {
                            Id = 2,
                            CategoryId = 1,
                            ManufacturerId = 1,
                            Name = "Angle grinder",
                            Price = 1520.00m
                        },
                        new
                        {
                            Id = 3,
                            CategoryId = 2,
                            ManufacturerId = 2,
                            Name = "Suburban",
                            Price = 990000m
                        },
                        new
                        {
                            Id = 4,
                            CategoryId = 2,
                            ManufacturerId = 2,
                            Name = "Camaro",
                            Price = 620000m
                        },
                        new
                        {
                            Id = 5,
                            CategoryId = 3,
                            ManufacturerId = 3,
                            Name = "Milk",
                            Price = 14.50m
                        });
                });

            modelBuilder.Entity("ProductInventory.Models.Entities.Product", b =>
                {
                    b.HasOne("ProductInventory.Models.Entities.Category", "Category")
                        .WithMany("Products")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ProductInventory.Models.Entities.Manufacturer", "Manufacturer")
                        .WithMany("Products")
                        .HasForeignKey("ManufacturerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");

                    b.Navigation("Manufacturer");
                });

            modelBuilder.Entity("ProductInventory.Models.Entities.Category", b =>
                {
                    b.Navigation("Products");
                });

            modelBuilder.Entity("ProductInventory.Models.Entities.Manufacturer", b =>
                {
                    b.Navigation("Products");
                });
#pragma warning restore 612, 618
        }
    }
}
